/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package edu.iss.ects.strust.action;

import java.util.Collection;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;


import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;


import edu.iss.ects.entity.Orderline;
import edu.iss.ects.entity.Product;
import edu.iss.ects.entity.ShopCart;
import edu.iss.ects.entity.Orderline;
import edu.iss.ects.exception.ManagerProductException;
import edu.iss.ects.imp.ProductDAO;
import edu.iss.ects.strust.form.ShopCartForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-12-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ShopCartAction extends DispatchAction {
	
	
	public ActionForward addCar(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ManagerProductException {
		//自动强转了 Form
		ShopCartForm shopCartForm = (ShopCartForm) form;
		
		//得到产品 id
		Integer pid = shopCartForm.getProdId();
		System.out.println("pid ="+pid);
		
		//根据 id 查询产品对象
		ProductDAO pdi=new ProductDAO();
		Product product=(Product)pdi.findById(pid);
	
		//新建 OrderLine 明细对象 
		Orderline line = new Orderline();
		line.setAmount(1);
		line.setProduct(product);
		
		//把  orderLine 对象，加入购物车
	
		HttpSession session = request.getSession();
		ShopCart cart = (ShopCart)session.getAttribute("cart");
		System.out.println("购物车 对象  cart="+cart);
		if(cart == null)
		{
			//如果购物车对象为 null 说明，之前没有购物车
			// 赏给他一个空的购物车
			cart = new ShopCart();
			session.setAttribute("cart", cart);
			System.out.println("购物车 对象  cart=" + cart);
		}
		
		
		cart.add(line);
		
		//更新会话对象中的购物车
		session.setAttribute("cart", cart);
		
		return mapping.findForward("showCart");
	}
	
	public ActionForward showCart(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		System.out.println("产品明细加入购物车，需要在购物车中显示...................");
		//需要显示购物名称信息如下：产品基本信息，所购买的数量，实时显示购物车中商品总数量，总价
		HttpSession session = request.getSession();
		ShopCart cart = (ShopCart)session.getAttribute("cart");
		System.out.println("购物车 cart为" + cart);
		
		// 从购物车中，取出产品明细列表
		Collection list = null;
		// 从购物车中，取出商品总个数
		int count = 0;
		// 从购物车中，取出商品总价格
		double total = 0;
		System.out.println(cart.getSize());
		// 清空购物车的情况
		
		if (cart.getSize() == 0) {
		
			list = null;
			count = 0;
			total = 0;
		} 
		
		else {
		
		

			// 从购物车中，取出产品明细列表
			list = cart.getOrder().getOrderlines();

			// 从购物车中，取出商品总个数
			count = cart.getCount();

			// 从购物车中，取出商品总价格
			total = cart.getTotal();
		
		}
		
		//把上述三个数据传递给 购物车页面显示
		session.setAttribute("list", list);
		session.setAttribute("count", count);
		session.setAttribute("total", total);
		
		return mapping.findForward("toCart");
	}
	
	
	
	
	public ActionForward updateCart(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ManagerProductException {
		// 要更新的产品 id
		String prodId = request.getParameter("product_id");
		Integer pid = new Integer(prodId);
		// 要更新的产品数量
		String numbs = request.getParameter("num");
		Integer num = new Integer(numbs);

		// 根据 id 查询产品对象
		ProductDAO pdi = new ProductDAO();
		Product product = (Product) pdi.findById(pid);
		System.out.println("根据产品 id =" + pid + " 查询产品 为  =" + product);

		// 新建 OrderLine 明细对象
		Orderline line = new Orderline();
		line.setAmount(num);
		line.setProduct(product);

		// 把 orderLine 对象，加入购物车
		HttpSession session = request.getSession();
		ShopCart cart = (ShopCart) session.getAttribute("cart");
		System.out.println("购物车 对象  cart=" + cart);

		cart.modify(line);

		// 更新会话对象中的购物车
		session.setAttribute("cart", cart);

		return mapping.findForward("showCart");
	}

	public ActionForward deleteCart(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// 要更新的产品 id
		String prodId = request.getParameter("pid");
		Integer pid = new Integer(prodId);

		// 把 orderLine 对象，加入购物车
		HttpSession session = request.getSession();
		ShopCart cart = (ShopCart) session.getAttribute("cart");
		System.out.println("购物车 对象  cart=" + cart);

		cart.remove(pid);

		// 更新会话对象中的购物车
		session.setAttribute("cart", cart);

		return mapping.findForward("showCart");
	}

	public ActionForward clearCart(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		// 把 orderLine 对象，加入购物车
		HttpSession session = request.getSession();
		ShopCart cart = (ShopCart) session.getAttribute("cart");
		System.out.println("购物车 对象  cart=" + cart);

		cart.clearCart();

		// 更新会话对象中的购物车
		session.setAttribute("cart", cart);

		return mapping.findForward("showCart");
	}
}